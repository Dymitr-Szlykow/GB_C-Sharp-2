# Практическая часть курса "C# уровень 2" образовательной платформы GeekBrains.
# студент Дмитрий Шлыков

## Занятие 1. Объектно-ориентированное программирование. Часть 1. (30.09.2021)

Задания.
 1. Добавить свои объекты в иерархию объектов, чтобы получился красивый задний фон,
    похожий на полёт в звёздном пространстве.
 2. *Заменить кружочки картинками, используя метод DrawImage.

## Занятие 2. Объектно-ориентированное программирование. Часть 2. (04.10.2021)

Задания.
 1. Построить три класса (базовый и 2 потомка), описывающих некоторых работников с почасовой оплатой (один из потомков) и фиксированной оплатой (второй потомок).
    а) Описать в базовом классе абстрактный метод для расчёта среднемесячной заработной платы.
       Для «повременщиков» формула для расчета такова: «среднемесячная заработная плата = 20.8 * 8 * почасовая ставка»,
       для работников с фиксированной оплатой «среднемесячная заработная плата = фиксированная месячная оплата».
    б) Создать на базе абстрактного класса массив сотрудников и заполнить его.
    в) *Реализовать интерфейсы для возможности сортировки массива, используя Array.Sort().
    г) *Создать класс, содержащий массив сотрудников, и реализовать возможность вывода данных с использованием foreach.
 2. Переделать виртуальный метод Update в BaseObject в абстрактный и реализовать его в наследниках.
 3. Сделать так, чтобы при столкновениях пули с астероидом они регенерировались в разных концах экрана.
 4. Сделать проверку на задание размера экрана в классе Game.
    Если высота или ширина (Width, Height) больше 1000 или принимает отрицательное значение, выбросить исключение ArgumentOutOfRangeException().
 5. *Создать собственное исключение GameObjectException, которое появляется при попытке создать объект с неправильными характеристиками (например, отрицательные размеры, слишком большая скорость или позиция).

## Занятие 3. Объектно-ориентированное программирование. Часть 3.

Задания.
 1. Добавить космический корабль, как описано в уроке.
 2. Доработать игру «Астероиды».
    а) Добавить ведение журнала в консоль с помощью делегатов;
    б) *Добавить это и в файл.
 3. Разработать аптечки, которые добавляют энергию.
 4. Добавить подсчет очков за сбитые астероиды.
 5. *Добавить в пример Lesson3 обобщенный делегат.

## Занятие 4. Объектно-ориентированное программирование. Часть 4.

Задания.
 1. Добавить в программу коллекцию астероидов. Как только она заканчивается (все астероиды сбиты), формируется новая коллекция, в которой на 1 астероид больше.
 2. Дана коллекция List<T>, требуется подсчитать, сколько раз каждый элемент встречается в данной коллекции:
    а) для целых чисел;
    б) *для НЕобобщенной коллекции;
    в) *используя Linq.
 3. *Дан фрагмент программы:
		|Dictionary<string, int> dict = new Dictionary<string, int>()
		|{
		|    {"four",4 },
		|    {"two",2 },
		|    { "one",1 },
		|    {"three",3 },
		|};
		|var d = dict.OrderBy(delegate(KeyValuePair<string,int> pair) { return pair.Value; });
		|foreach (var pair in d)
		|{
		|    Console.WriteLine("{0} - {1}", pair.Key, pair.Value);
		|}
    а) Свернуть обращение к OrderBy с использованием лямбда-выражения $.
       ОТВЕТ: "var d = dict.OrderBy(pair => pair.Value);"

## Занятие 5. Знакомство с технологией WPF.
## Занятие 6. Связывание данных. Триггеры.
## Занятие 7. Взаимодействие с базой данных.
## Занятие 8. Обзор сервис-ориентированной архитектуры приложений (SOA).
